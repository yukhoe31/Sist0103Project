package day0129;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Scanner;

import oracleDb.DbConnect;

public class L02_JdbcScore {
	
	DbConnect db = new DbConnect();
	Scanner sc = new Scanner(System.in);

	//성적 입력 메서드(이름,자바,오라클)
	public void insertSungjuk() {
		System.out.println("학생명?");
		String name = sc.nextLine();
		System.out.println("자바점수?");
		int java = Integer.parseInt(sc.nextLine());
		System.out.println("오라클점수?");
		int oracle = Integer.parseInt(sc.nextLine());
		
		Connection conn = db.getOracle();
		PreparedStatement pstmt = null;
		
		//아래처럼 엉망으로 넣어도 제대로 들어간다. 바인딩 순서만 잘 지키면
		String sql = "insert into sungjuk (num,oracle,name,java)"
				+ " values (seq_score.nextval,?,?,?)";
		
		try {
			pstmt = conn.prepareStatement(sql);
			
			//바인딩
			pstmt.setInt(1, oracle);
			pstmt.setString(2, name);
			pstmt.setInt(3, java);
			
			//?갯수만큼 모두 바인딩후 실행
			pstmt.execute();
			System.out.println("추가되었습니다~~");
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			db.dbClose(pstmt, conn);
		}
	}
	
	//0.인터페이스 메서드
	public void process() {
		
		while(true) {
			System.out.println("1.학생성적추가  2.학생정보전체출력  3.학생정보삭제  4.학생정보수정  9.종료");
		
		int num = Integer.parseInt(sc.nextLine());
		
		switch(num) {
		case 1:
			this.insertSungjuk();
			break;
		case 9:
			System.out.println("**성적 프로그램 종료**");
			System.exit(0);//강제종료
		default:
			System.out.println("잘못입력하셨습니다.");
		}
		
		
		
		}
	}
	
	
	
	public static void main(String[] args) {
		
		L02_JdbcScore score = new L02_JdbcScore();
		
		
		
		
		score.insertSungjuk();

	}

}
